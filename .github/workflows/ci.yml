name: Continuous integration

on:
  push:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      deploy_trigger:
        description: Force a deployment to PyPI
        default: "false"
        required: true
env:
  FORCE_COLOR: "1"

jobs:
  lint:
    strategy:
      matrix:
        os:
          - ubuntu-latest
        python-version:
          - "3.13"
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          cache-suffix: ${{ github.job }}
          enable-cache: true
      - name: Lint with ruff
        run: |
          uv tool install ruff --python ${{ matrix.python-version }}
          # stop the build if there are Python syntax errors or undefined names
          ruff check . --select=E9,F63,F7,F82 --output-format=github
          # exit-zero treats all errors as warnings.
          ruff check . --exit-zero --output-format=github
  test:
    needs: lint
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 4
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          # - windows-latest
        python-version:
          - "3.11"
          - "3.12"
          - "3.13"
    steps:
      - uses: actions/checkout@v4
      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          cache-suffix: py${{ matrix.python-version }}-${{ matrix.os }}
          enable-cache: true
      - name: Run tox
        run: |
          uv tool install tox --with tox-gh-actions --with tox-uv --python ${{ matrix.python-version }}
          tox -- -vv
      - name: Upload hypothesis examples database
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: hypothesis-example-db-py${{ matrix.python-version }}-${{ matrix.os}}
          path: .hypothesis/examples
  build_wheels:
    needs: test
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.runs-on }}
    strategy:
      matrix:
        os:
          - "linux-intel"
          - "linux-arm"
          - "windows"
          - "macOS-intel"
          - "macOS-arm"
        include:
          - archs: auto
            platform: auto
          - os: linux-intel
            runs-on: ubuntu-latest
          - os: linux-arm
            runs-on: ubuntu-24.04-arm
          - os: windows
            runs-on: windows-latest
          - os: macos-intel
            # macos-13 was the last x86_64 runner
            runs-on: macos-13
          - os: macos-arm
            # macos-14+ (including latest) are ARM64 runners
            runs-on: macos-latest
            archs: auto,universal2

    steps:
      - uses: actions/checkout@v4

      - name: Build wheels
        uses: pypa/cibuildwheel@v3.0.0b4
        env:
          CIBW_PLATFORM: ${{ matrix.platform }}
          CIBW_ARCHS: ${{ matrix.archs }}
      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl
  build_sdist:
    name: Build source distribution
    strategy:
      matrix:
        os:
          - ubuntu-latest
        python-version:
          - "3.13"
    runs-on: ${{ matrix.os }}
    needs: test
    steps:
      - uses: actions/checkout@v4
      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          cache-suffix: py${{ matrix.python-version }}-${{ matrix.os }}
          enable-cache: true
      - name: Build wheels
        run: uv build --python ${{ matrix.python-version }} --sdist
      - uses: actions/upload-artifact@v4
        with:
          name: dist-sdist
          path: dist/*.tar.gz
  upload_pypi:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    if: >
      (github.event_name == 'release' && github.event.action == 'published')
      || (github.event_name == 'workflow_dispatch' && github.event.inputs.deploy_trigger == 'true')
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: dist-*
          path: dist
          merge-multiple: true
      - uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.pypi_token }}
          # To test: repository_url: https://test.pypi.org/legacy/
